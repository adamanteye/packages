name: Daily Check

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "packages.toml"
      - ".github/workflows/check.yml"
  pull_request:
    branches:
      - master
    paths:
      - "packages.toml"
      - ".github/workflows/check.yml"
  schedule:
    - cron: "40 15 * * *"

jobs:
  check-upstream-updates:
    name: Check Upstream Updates
    runs-on: ubuntu-latest
    container: ghcr.io/adamanteye/nvchecker:master
    steps:
      - uses: actions/checkout@v4
      - name: Check upstream updates
        run: |
          nvchecker -l warning -c packages.toml 2> err.log
          nvcmp -c packages.toml > compare
      - name: Upload Result
        uses: actions/upload-artifact@v4
        with:
          name: update-results
          path: |
            compare
            new.json
            err.log
          retention-days: 1
  create-issue-and-push-to-master:
    name: Create Issue and Push to Master
    runs-on: ubuntu-latest
    needs: check-upstream-updates
    permissions:
      contents: write
      issues: write
    steps:
      - uses: actions/checkout@v4
      - name: Download Result
        uses: actions/download-artifact@v4
        with:
          name: update-results
      - name: Create Issue and Persist old.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          if [ -s compare ]; then
            data=$(jq -r ".[\"data\"]" new.json)
            packages=()
            while IFS= read -r package; do
              name=$(echo "$package" | cut -d' ' -f1)
              packages+=("$name")
              body=$(echo "$data" | jq -r ".[\"$name\"]")
              body=$(printf "**New Version available**\n\`\`\`json\n%s\n\`\`\`" "$body")
              gh issue create --title "$package" --body "$body" \
                --repo ${{ github.repository }}
            done < compare
            mv new.json old.json
            git add old.json
            commit_message=$(printf "chore: update new versions\n\npackages: %s" "${packages[*]}")
            git commit -m "$commit_message"
            git push origin master
          fi
          if [ -s err.log ]; then
            err_log=$(cat err.log)
            err_log=$(printf "**Error Log**\n\`\`\`\n%s\n\`\`\`" "$err_log")
            gh issue create --title "check failed" --body "$err_log" \
                --repo ${{ github.repository }} --assignee ${{ github.actor }}
          fi
